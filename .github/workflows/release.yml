name: Build and Release

on:
  push:
    tags: ['v*']
  workflow_dispatch:

env:
  SCONS_CACHE: ${{ github.workspace }}/.scons-cache
  SCONS_VERSION: 4.6.0
  ADDON_NAME: rapidxml_gdextension

jobs:
  build_linux:
    name: Linux (${{ matrix.arch }}, ${{ matrix.target }})
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        target: [template_debug, template_release]
        arch: [x86_64, x86_32, arm64]
        include:
          - arch: x86_32
            packages: g++-multilib
          - arch: arm64
            packages: g++-aarch64-linux-gnu
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Set up SCons
        run: python -m pip install scons==${{ env.SCONS_VERSION }}
      - name: Setup dependencies
        if: matrix.packages
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.packages }}
      - name: Configure SCons Cache
        uses: actions/cache@v4
        with:
          path: ${{ env.SCONS_CACHE }}
          key: ${{ runner.os }}-linux-${{ matrix.arch }}-${{ matrix.target }}-${{ hashFiles('SConstruct', 'src/**') }}
      - name: Build and Package
        run: scons package platform=linux arch=${{ matrix.arch }} target=${{ matrix.target }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with: { name: build-artifacts, path: addons/ }

  build_windows:
    name: Windows (${{ matrix.arch }}, ${{ matrix.target }})
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [template_debug, template_release]
        arch: [x86_64, x86_32, arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # <-- 关键修复：拉取子模块
      - name: Set up Python
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Set up SCons
        run: python -m pip install scons==${{ env.SCONS_VERSION }}
      - name: Configure SCons Cache
        uses: actions/cache@v4
        with:
          path: ${{ env.SCONS_CACHE }}
          key: ${{ runner.os }}-windows-${{ matrix.arch }}-${{ matrix.target }}-${{ hashFiles('SConstruct', 'src/**') }}
      - name: Build and Package
        run: scons package platform=windows arch=${{ matrix.arch }} target=${{ matrix.target }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with: { name: build-artifacts, path: addons/ }

  build_macos:
    name: macOS (universal, ${{ matrix.target }})
    runs-on: macos-13
    strategy: { fail-fast: false, matrix: { target: [template_debug, template_release] } }
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # <-- 关键修复：拉取子模块
      - name: Set up Python
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Set up SCons
        run: python -m pip install scons==${{ env.SCONS_VERSION }}
      - name: Configure SCons Cache
        uses: actions/cache@v4
        with:
          path: ${{ env.SCONS_CACHE }}
          key: ${{ runner.os }}-macos-universal-${{ matrix.target }}-${{ hashFiles('SConstruct', 'src/**') }}
      - name: Build and Package
        run: scons package platform=macos arch=universal target=${{ matrix.target }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with: { name: build-artifacts, path: addons/ }

  create_release:
    name: Create Release
    needs: [build_linux, build_windows, build_macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with: { name: build-artifacts, path: addons }
      - name: Create ZIP archive
        run: zip -r ${{ env.ADDON_NAME }}.zip addons/
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ADDON_NAME }}.zip
          name: Release ${{ github.ref_name }}
          prerelease: contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc')