name: üõ†Ô∏è Build and Release GDExtension

on:
  push:
    tags: ['v*']
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  ADDON_NAME: rapidxml_gdextension

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # Matrix is unchanged, it correctly defines the targets
        target:
          [
            { platform: linux, arch: x86_64, os: ubuntu-22.04 },
            { platform: linux, arch: x86_32, os: ubuntu-22.04 },
            { platform: windows, arch: x86_64, os: windows-latest },
            { platform: windows, arch: x86_32, os: windows-latest },
            { platform: macos, arch: universal, os: macos-latest },
            { platform: android, arch: arm64, os: ubuntu-22.04 },
            { platform: android, arch: arm32, os: ubuntu-22.04 },
            { platform: web, arch: wasm32, os: ubuntu-22.04 },
          ]
        target-type: [template_debug, template_release]
        float-precision: [single]

    runs-on: ${{ matrix.target.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Initialize and Verify Submodules
        run: |
          git submodule init
          git submodule update --recursive
          if [ ! -f "godot-cpp/SConstruct" ]; then exit 1; fi

      - name: Install multilib support
        if: ${{ matrix.target.platform == 'linux' && matrix.target.arch == 'x86_32' }}
        run: sudo apt-get update && sudo apt-get install -y gcc-multilib g++-multilib

      - name: Setup godot-cpp dependencies
        uses: ./godot-cpp/.github/actions/setup-godot-cpp
        with:
          platform: ${{ matrix.target.platform }}
          em-version: 3.1.62

      - name: Restore SCons cache
        uses: ./godot-cpp/.github/actions/godot-cache-restore
        with:
          scons-cache: ${{ github.workspace }}/.scons-cache/
          cache-name: ${{ matrix.target.platform }}-${{ matrix.target.arch }}-${{ matrix.float-precision }}-${{ matrix.target-type }}

      - name: Compile GDExtension Package
        shell: sh
        env:
          SCONS_CACHE: ${{ github.workspace }}/.scons-cache/
        # --- CHANGE 1: Use "package" to build the full addon directory ---
        run: |
          scons package target=${{ matrix.target-type }} platform=${{ matrix.target.platform }} arch=${{ matrix.target.arch }} precision=${{ matrix.float-precision }}

      - name: Save SCons cache
        uses: ./godot-cpp/.github/actions/godot-cache-save
        with:
          scons-cache: ${{ github.workspace }}/.scons-cache/
          cache-name: ${{ matrix.target.platform }}-${{ matrix.target.arch }}-${{ matrix.float-precision }}-${{ matrix.target-type }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ADDON_NAME }}-${{ matrix.target.platform }}-${{ matrix.target.arch }}-${{ matrix.float-precision }}-${{ matrix.target-type }}
          # --- CHANGE 2: Upload the entire "addons" folder which now contains the complete package ---
          path: addons/

  # The merge job does not need changes, it will correctly merge the artifacts
  merge:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: ${{ env.ADDON_NAME }}-builds
          pattern: ${{ env.ADDON_NAME }}-*
          delete-merged: true

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: merge
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all merged artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ADDON_NAME }}-builds
          # --- CHANGE 3: The artifact already contains the "addons" folder structure ---
          path: . 

      - name: Create ZIP archive
        run: |
          # The downloaded artifact already has the correct structure 'addons/rapidxml_gdextension/...'
          # We just need to zip the 'addons' folder.
          zip -r ${{ env.ADDON_NAME }}.zip addons/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ADDON_NAME }}.zip
          name: Release ${{ github.ref_name }}
          prerelease: contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc')